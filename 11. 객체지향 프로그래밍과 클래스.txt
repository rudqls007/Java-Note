1. 객체와 객체 지향 프로그래밍 (Object Oriented Programming, OOP)
    1) 객체 (Object)
        - 구체적 데이터의 단위(물리적인 객체)
            - 개, 고양이, 호랑이, 학생, 회원, 소나타
        - 추상적 데이터의 단위(개념적인 객체)
            - 동물, 주문, 배송, 자동차

    2) 절차 지향 프로그래밍 & 객체 지향 프로그래밍
    - 절차 지향 프로그래밍
        - 시간이나 사건의 흐름에 따른 프로그래밍
            - 일어난다 -> 씻는다 -> 밥을 먹는다 -> 버스를 탄다 -> 요금 지불한다 -> 학원 도착한다
        
        - 객체 지향 프로그래밍
        
                    먹는다
            학생 <------------->   밥
              | \    
        탄다  |    \   간다   \
              |                \
            버스 <------------->  학원
            
            - 객체를 정의(클래스로 구현)하고
            - 각 객체 제공하는 기능들을 구현하고
            - 각 객체가 제공하는 기능들 간의 메세지 전달을 통하여 객체 간의 협력을 구현한다
    3 객체 예
        - 온라인 쇼핑몰(객체)에 회원 로그인(객체)을 하고 여러 판매자(객체)가 판매(객체)하고 있는 제품(객체) 중 하나를 골라 주문(객체)을 한다
        - 아침에 학원(객체)에 가는 길에 별다방(객체)에 들려 아아(객체)를 주문(객체)했다
        - 성적(객체) 확인을 위해서 학사 관리 시스템(객체)에 로그인(객체)을 하여 수강(객체)한 과목(객체)들의 성적(객체)을 확인했다

2. 클래스
    0)   자바 추상화 우리는 보통 알고는 있지만 정확하게 표현하기 힘든 것들을 중요한 부분이나 특징점을 잡아 설명하고는 한다.
         이것을 '추상적으로 표현한다' 즉 '추상화한다' 라고 하는데 객체지향의 개념에서 추상화는 중요한 개념 중에 하나이다.       
         컴퓨터 과학에서의 추상화는 복잡한 자료, 모듈, 시스템 등으로부터 핵심적인 개념 또는 기능을 간추려 내는 것을 말한다. 
         객체 지향 관점에서의 추상화는 클래스를 정의할 때, 불필요한 부분들을 생략하고 객체의 속성 중 중요한 것에만 중점을 두어 개략화 하는 것, 
         즉 클래스들의 중요하고 공통된 성질들을 추출하여 슈퍼 클래스를 선정하는 개념이다.
    1) 객체와 관련된 데이터와 처리 동작을 한데 모은 코드 뭉치이다
    2) 어느정도 특징적인 데이터와 동작으로 추려낼 필요가 있다
    3) 추려내는 과정을 추상화(Abstraction)라고 부른다 (일반화라고 부른다)
        - 객체                                                              (추상화 된)클래스
           
            탈 것        이륜       자전거, 오토바이                                bike
                        자동차      승용차, 버스, 트럭                              car
                        운송 수단   자동차, 배, 비행기                             Vehicle
    
    4) 명사적인 특징을 뽑아내는 추상화 과정 => 맴버 변수(필드) 추출
    5) 동사적인 특징을 뽑아내는 추상화 과정 => 맴버 함수(메서드) 추출
    6) 클래스는 객체의 청사진(BluePrint)이다

3. 객체와 클래스
    1) 클래스는 객체를 프로그래밍에서 사용하려고 추상화해서 기술해놓은 설계도이다
    2) 프로그래밍에서 사용하려면 설계도를 기초로 실체(객체)를 만들 필요가 있다
        - 실체화된 것을 객체(인스턴스)라고 한다
        - 실체화하는 작업을 객체(인스턴스)를 생성한다고 한다 (instance)
    3) 클래스라는 설계도대로 구현한 것을 메모리에 탑재해 메모리 주소를 부여한 것이 객체다 
    4) 실제로 클래스를 객체로 만드는 코드는 아래와 같다

      클래스 타입          객체 생성(연산자)        
        -------             ---- 
        Student myStudent = new Student(); = 객체(instance)가 만들어진다
                ---------       ---------
           (참조)변수 4byte        생성자         
        
        - Student 클래스의 Student() 생성자를 이용해서 new해서 (새로 만든다)
          생성된 객체를 메모리에 적재하고 변수 myStuden에 대입시켰다
        