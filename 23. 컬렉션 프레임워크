0. 자료구조 (Data Structure)
    1) 프로그램에서 사용할 많은 데이터를 메모리 상에서 관리하는 여러 구현 방법들이다
    2) 효율적인 자료구조가 성능 좋은 프로그램의 기반이다
    3) 자료의 효율적인 관리는 프로그램의 수행 속도와 밀접한 관련이 있다
    4) 자료고주에 대한 이해가 중요하다

1. 자료구조의 종류
    1) 선형 자료구조
        - 한 줄로 자료를 관리하기
        - 배열(Array)
            - 정해진 크기의 메모리를 먼저 할당받아 사용하고, 자료의 물리적인 위치와 논리적 위치가 같다
        - 연결 리스트 (LinkedList)
            - 선형으로 자료를 관리하고, 자료가 추가될 때마다 메모리를 할당 받고, 자료는 링크로 연결된다
            - 자료의 물리적 위치와 논리적 위치가 다를 수 있다
2. 트리 (Tree)
    - 부모 노드와 자식 노드간의 연결로 이루어진 자료 구조이다
    - 이진 트리 (binary tree)
        - 부모 노드에 자식 노드가 두 개 이하인 트리이다
        - 자료의 중복 허용하지 않는다
        - 왼쪽 자식 노드는 부모 노드보다 작은 값, 오른쪽 자식 노드는 부모 노드보다 큰 값을 가진다



=================================================================================

1. 컬렉션 프레임워크 (Collection FrameWork)
    1) 자바에서 제공되는 data structure 구현 클래스들이다
    2) 프로그램 구현에 필요한 자료구조를 구현해 놓은 JDK 라이브러리
    3) java.util 패키지에 구현되어 있다
    4) 최적화된 알고리즘을 사용할 수 있다
    5) 활용에 대한 이해가 필요함

2. Collection 인터페이스
    1) 하나의 객체를 관리하기 위한 메서드가 선언된 인터페이스
    2) 하위에 List와 Set 인터페이스가 있다
    
3. List 인터페이스
    1) 객체를 순서에 따라 저장하고 관리하는데 팔요한 메서드가 선언된 인터페이스
              ----------
    2) 자료구조 리스트의 구현을 위한 인터페이스
    3) 중복을 허용한다
    4) ArrayList, LinkedList, Stack, Queue, Vector ...

4. Set 인터페이스
    1) 순서와 관계 없이 중복을 허용하지 않고 유일한 값을 관리하는데 필요한 메서드가 선언된다
    2) 아이디, 주민번호, 사번 등 관리하는 데 유용하다
    3) 저장된 순서와 출력되는 순서는 다를 수 있다
    4) HashSet, TreeSet .....

5. Map 인터페이스
    1) 쌍(pair)으로 이루어진 객체를 관리하는 데 사용하는 메서드들이 선언된 인터페이스
    2) 객체는 key-value의 쌍으로 이루어진다
    3) key는 중복을 허용하지 않는다
    4) HashTable, HashMap, Properties, TreeMap .....

6. Iterator 인터페이스
    1) Collection 요소를 순회한다
    2) 컬레션 프레임워크에 저장된 요소들을 하나씩 차례로 참조하는 것이다
    3) 순서가 있는 List 인터페이스의 경우는 get(i) 메서드를 이용할 수 있다
    4) Set 인터페이스의 경우 get(i) 메서드가 제공되지 않으므로 Iterator 활용하여 객체를 순회한다
    5) boolean hasNext()
        - 이후에 요소가 더 있는지를 체크하는 메서드다
        - 요소가 있다면 trune를 반환한다
    6) E next()
        - 다음에 있는 요소를 반환한다
    