1. 조건문
    1) 주어진 조건에 따라 다른 실행이 이루어지도록 구현할 때 필요한 제어문이다
    2) if문 , switch문

2. if문
    1) if문 문법
        if(조건식) {
            수행문;     //조건식이 '참'인 경우에 수행문이 수행된다
                       //조건식이 '참'이 아닌 경우에 수행문이 수행되지 않는다
        }
    2) if ~ else문 문법
        if(조건식) {
            수행문1;        //조건식이 '침'인 경우에 수행한다
            

        else {

            수행문2;       //조건식이 '참'이 아닌 경우에 수행한다
            }
        }

    3) 조건이 여러 개일 때의 if 문
        : if ~ else if ~ else 문
        - 하나의 상황에 대한 조건식이 여러개로 나뉘고 각 조건에 다른 수행이 이루어져야 할 경우 사용된다
        - else if 절은 중간에 얼마든지 추가(개수) 가능하다

        if(조건식1) {
            수행문1;       //조건식1이 '침'인 경우에 수행하고
                          //전체 조건문을 빠져 나간다

        else if (조건식2) {

            수행문2;       //조건식이 '참'이 아닌 경우에 수행한다
            }             //전체 조건문을 빠져 나간다
        }
        else if (조건식3) {

            수행문3;       //조건식이 '참'이 아닌 경우에 수행한다
            }             //전체 조건문을 빠져 나간다
        }  
        else if (조건식4) {

            수행문4;       //조건식이 '참'이 아닌 경우에 수행한다
            }             //전체 조건문을 빠져 나간다
        }
        else {
            수행문5;       // 위 조건이 모두 해당되지 않는 경우 수행된다(디폴트 조건)
        }


        - 예) 조건식4가 만족되면 수행문4 -> 수행문6; 순으로 수행된다

3. switch - case 문
    1) 비교 조건이 특정 값이나 문자열인 경우 가독성이 좋게 구현이 된다
    2) 문법
        switch(조건식) {
            case 1 :
                처리(명령문) 1;
                break;
            case 2 :
                처리(명령문) 2;
                break;

            default :
                처리 n;
        }
    3) break 문을 사용하여 각 조건이 만족되면 switch 블록을 빠져 나오도록 한다
    4) Java 14부터 지원되는 switch expression
        - 간단하게 쉼표(,)로 조건 구분하는 게 가능하다
        - yield 키워드 사용
            - 반환 값을 받을 수 있다
    
                                  